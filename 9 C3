import java.util.ArrayList;
import java.util.List;

public class PoolTableGeneratorC3 {
    public static void main(String[] args) {
        String[] assemblyCode = {
            "START 300",
            "READ M",
            "MOVER AREG, ='11'",
            "MOVEM AREG, N",
            "MOVER BREG, ='61'",
            "ADD AREG, BREG",
            "COMP AREG, M",
            "BC GT, LAST",
            "LTORG",
            "NEXT SUB AREG, ='11'",
            "MOVER CREG, N",
            "ADD CREG, ='81'",
            "MOVEM CREG, N",
            "PRINT Y",
            "LAST STOP",
            "M DS 1",
            "N DS 1",
            "END"
        };

        List<Integer> poolTable = new ArrayList<>();
        int locationCounter = 300;
        boolean inLiteralPool = false;

        for (String line : assemblyCode) {
            line = line.trim();
            if (line.isEmpty()) continue;

            String[] tokens = line.split("\\s+");
            
            if (tokens[0].equals("START")) {
                locationCounter = Integer.parseInt(tokens[1]);
                continue;
            }
            
            if (tokens[0].equals("LTORG")) {
                inLiteralPool = true;
                poolTable.add(locationCounter);
                // Assume each literal takes 1 word
                locationCounter += countLiteralsInPool(assemblyCode);
                continue;
            }
            
            if (!tokens[0].equals("END")) {
                locationCounter++;
            }
        }

        System.out.println("Pool Table:");
        System.out.println("Pool Start Address");
        for (Integer address : poolTable) {
            System.out.println(address);
        }
    }

    private static int countLiteralsInPool(String[] code) {
        int count = 0;
        boolean afterLTORG = false;
        
        for (String line : code) {
            line = line.trim();
            if (line.equals("LTORG")) {
                afterLTORG = true;
                continue;
            }
            
            if (afterLTORG) {
                if (line.contains("='")) {
                    count++;
                } else if (!line.isEmpty()) {
                    break;
                }
            }
        }
        return count;
    }
}
