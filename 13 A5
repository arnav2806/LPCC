import java.util.ArrayList;
import java.util.List;

class MacroDefinition {
    String name;
    List<String> parameters;
    List<String> body;

    public MacroDefinition(String name) {
        this.name = name;
        this.parameters = new ArrayList<>();
        this.body = new ArrayList<>();
    }
}

public class MacroProcessorA5 {
    public static void main(String[] args) {
        String[] macroCode = {
            "LOAD A",
            "STORE B",
            "MACRO ABC",
            "LOAD p",
            "SUB q",
            "MEND",
            "MACRO ADD1 ARG",
            "LOAD X",
            "STORE ARG",
            "MEND",
            "MACRO ADD5 A1, A2, A3",
            "STORE A2",
            "ADD1 5",
            "ADD1 10",
            "LOAD A1",
            "LOAD A3",
            "MEND",
            "ADD1 t",
            "ABC",
            "ADD5 D1, D2, D3",
            "END"
        };

        List<MacroDefinition> macroDefinitions = new ArrayList<>();
        List<String> intermediateCode = new ArrayList<>();
        MacroDefinition currentMacro = null;

        for (String line : macroCode) {
            line = line.trim();
            if (line.isEmpty()) continue;

            String[] tokens = line.split("\\s+");
            
            if (tokens[0].equals("MACRO")) {
                currentMacro = new MacroDefinition(tokens[1]);
                // Handle parameters if any
                if (tokens.length > 2) {
                    for (int i = 2; i < tokens.length; i++) {
                        currentMacro.parameters.add(tokens[i].replace(",", ""));
                    }
                }
                continue;
            }
            
            if (tokens[0].equals("MEND")) {
                if (currentMacro != null) {
                    macroDefinitions.add(currentMacro);
                    currentMacro = null;
                }
                continue;
            }
            
            if (currentMacro != null) {
                currentMacro.body.add(line);
            } else {
                intermediateCode.add(line);
            }
        }

        System.out.println("Intermediate Code:");
        for (String code : intermediateCode) {
            System.out.println(code);
        }

        System.out.println("\nMacro Definitions:");
        for (MacroDefinition macro : macroDefinitions) {
            System.out.println("MACRO " + macro.name + " " + String.join(", ", macro.parameters));
            for (String bodyLine : macro.body) {
                System.out.println(bodyLine);
            }
            System.out.println("MEND");
        }
    }
}
