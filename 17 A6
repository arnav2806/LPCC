import java.util.ArrayList;
import java.util.List;

class MDTEntry {
    int index;
    String definition;

    public MDTEntry(int index, String definition) {
        this.index = index;
        this.definition = definition;
    }

    @Override
    public String toString() {
        return index + "\t" + definition;
    }
}

public class MDTGeneratorA6 {
    public static void main(String[] args) {
        String[] macroCode = {
            "LOAD A",
            "STORE B",
            "MACRO ABC",
            "LOAD p",
            "SUB q",
            "MEND",
            "MACRO ADD1 ARG",
            "LOAD X",
            "STORE ARG",
            "MEND",
            "MACRO ADD5 A1, A2, A3",
            "STORE A2",
            "ADD1 5",
            "ADD1 10",
            "LOAD A1",
            "LOAD A3",
            "MEND",
            "ABC",
            "ADD5 D1, D2, D3",
            "END"
        };

        List<MDTEntry> mdt = new ArrayList<>();
        int mdtIndex = 1;
        boolean inMacro = false;
        StringBuilder currentMacro = new StringBuilder();

        for (String line : macroCode) {
            line = line.trim();
            if (line.isEmpty()) continue;

            String[] tokens = line.split("\\s+");
            
            if (tokens[0].equals("MACRO")) {
                inMacro = true;
                currentMacro = new StringBuilder();
                currentMacro.append(line).append("\n");
                continue;
            }
            
            if (tokens[0].equals("MEND")) {
                if (inMacro) {
                    currentMacro.append(line);
                    mdt.add(new MDTEntry(mdtIndex++, currentMacro.toString()));
                    inMacro = false;
                }
                continue;
            }
            
            if (inMacro) {
                currentMacro.append(line).append("\n");
            }
        }

        System.out.println("Macro Definition Table (MDT):");
        System.out.println("Index\tDefinition");
        for (MDTEntry entry : mdt) {
            System.out.println(entry);
        }
    }
}
