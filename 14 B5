import java.util.ArrayList;
import java.util.List;

class MacroDefinition {
    String name;
    List<String> parameters;
    List<String> body;

    public MacroDefinition(String name) {
        this.name = name;
        this.parameters = new ArrayList<>();
        this.body = new ArrayList<>();
    }
}

public class MacroProcessorB5 {
    public static void main(String[] args) {
        String[] macroCode = {
            "STORE P",
            "LOAD Q",
            "MACRO PCG",
            "LOAD m",
            "ADD n",
            "MEND",
            "LOAD H",
            "LOAD K",
            "MACRO ADDi PAR",
            "LOAD A",
            "STORE PAR",
            "MEND",
            "MACRO ADDii V1, V2, V3",
            "STORE V2",
            "ADDi 12",
            "ADDi 7",
            "LOAD V1",
            "LOAD V3",
            "MEND",
            "PCG",
            "ADDii Q1, Q2, Q3",
            "ADDi w",
            "END"
        };

        List<MacroDefinition> macroDefinitions = new ArrayList<>();
        List<String> intermediateCode = new ArrayList<>();
        MacroDefinition currentMacro = null;

        for (String line : macroCode) {
            line = line.trim();
            if (line.isEmpty()) continue;

            String[] tokens = line.split("\\s+");
            
            if (tokens[0].equals("MACRO")) {
                currentMacro = new MacroDefinition(tokens[1]);
                // Handle parameters if any
                if (tokens.length > 2) {
                    for (int i = 2; i < tokens.length; i++) {
                        currentMacro.parameters.add(tokens[i].replace(",", ""));
                    }
                }
                continue;
            }
            
            if (tokens[0].equals("MEND")) {
                if (currentMacro != null) {
                    macroDefinitions.add(currentMacro);
                    currentMacro = null;
                }
                continue;
            }
            
            if (currentMacro != null) {
                currentMacro.body.add(line);
            } else {
                intermediateCode.add(line);
            }
        }

        System.out.println("Intermediate Code:");
        for (String code : intermediateCode) {
            System.out.println(code);
        }

        System.out.println("\nMacro Definitions:");
        for (MacroDefinition macro : macroDefinitions) {
            System.out.println("MACRO " + macro.name + " " + String.join(", ", macro.parameters));
            for (String bodyLine : macro.body) {
                System.out.println(bodyLine);
            }
            System.out.println("MEND");
        }
    }
}
